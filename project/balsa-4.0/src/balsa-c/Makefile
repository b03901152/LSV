# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/balsa-c/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/balsa
pkgincludedir = $(includedir)/balsa
pkglibdir = $(libdir)/balsa
pkglibexecdir = $(libexecdir)/balsa
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = balsa-c$(EXEEXT)
subdir = src/balsa-c
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = Errors.$(OBJEXT) Positions.$(OBJEXT) \
	BalsaScanSource.$(OBJEXT) BreezeScanSource.$(OBJEXT) \
	accesses.$(OBJEXT) arith.$(OBJEXT) block.$(OBJEXT) \
	channels.$(OBJEXT) commands.$(OBJEXT) components.$(OBJEXT) \
	contexts.$(OBJEXT) decls.$(OBJEXT) exprs.$(OBJEXT) \
	flags.$(OBJEXT) instances.$(OBJEXT) lists.$(OBJEXT) \
	lvalues.$(OBJEXT) misc.$(OBJEXT) misclists.$(OBJEXT) \
	operators.$(OBJEXT) optimise.$(OBJEXT) output.$(OBJEXT) \
	parts.$(OBJEXT) ports.$(OBJEXT) pretty.$(OBJEXT) \
	procedures.$(OBJEXT) spans.$(OBJEXT) implicants.$(OBJEXT) \
	types.$(OBJEXT) values.$(OBJEXT) wires.$(OBJEXT) \
	balsa-c.$(OBJEXT) Idents.$(OBJEXT) General.$(OBJEXT) \
	Sets.$(OBJEXT) callcontexts.$(OBJEXT)
am__objects_2 = BalsaScan.$(OBJEXT) BreezeScan.$(OBJEXT) \
	Balsa.$(OBJEXT) Breeze.$(OBJEXT) Semantics.$(OBJEXT) \
	Tree.$(OBJEXT)
am__objects_3 =
am_balsa_c_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3)
balsa_c_OBJECTS = $(am_balsa_c_OBJECTS)
balsa_c_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(balsa_c_SOURCES) $(EXTRA_balsa_c_SOURCES)
DIST_SOURCES = $(balsa_c_SOURCES) $(EXTRA_balsa_c_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/yoyo/Downloads/balsa-4.0/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/yoyo/Downloads/balsa-4.0/missing --run tar
AR = ar
AST = 
AUTOCONF = ${SHELL} /home/yoyo/Downloads/balsa-4.0/missing --run autoconf
AUTOHEADER = ${SHELL} /home/yoyo/Downloads/balsa-4.0/missing --run autoheader
AUTOMAKE = ${SHELL} /home/yoyo/Downloads/balsa-4.0/missing --run automake-1.11
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -fPIC -fPIC -DPIC 
CG = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOT = /usr/bin/dot
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ESPRESSO = espresso
EXEEXT = 
FGREP = /bin/grep -F
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include  
GLIB_LIBS = -lglib-2.0  
GMODULE_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include  
GMODULE_LIBS = -Wl,--export-dynamic -pthread -lgmodule-2.0 -lglib-2.0  
GREP = /bin/grep
GTHREAD_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include  
GTHREAD_LIBS = -pthread -lgthread-2.0 -lglib-2.0  
GTK_CFLAGS = -pthread -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/freetype2 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/libpng12 -I/usr/include/harfbuzz  
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfontconfig -lgobject-2.0 -lglib-2.0 -lfreetype  
GUILE = /usr/bin/guile
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LALR = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lgmp 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/yoyo/Downloads/balsa-4.0/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = balsa
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
REX = 
RPP = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 4.0
abs_builddir = /home/yoyo/Downloads/balsa-4.0/src/balsa-c
abs_srcdir = /home/yoyo/Downloads/balsa-4.0/src/balsa-c
abs_top_builddir = /home/yoyo/Downloads/balsa-4.0
abs_top_srcdir = /home/yoyo/Downloads/balsa-4.0
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
balsadatadir = /usr/local/balsa/share
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
formatguiincdir = /usr/local/balsa/include/formatgui
formatguilibdir = /usr/local/balsa/lib
formatincdir = /usr/local/balsa/include/format
formatlibdir = /usr/local/balsa/lib
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/yoyo/Downloads/balsa-4.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local/balsa
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
INCLUDES = -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include   -Wall -Wno-char-subscripts -Wno-unused-label
balsa_c_LDADD = -lglib-2.0  
hand_c_srcs = \
	Errors.c Errors.h \
	Positions.c Positions.h \
	BalsaScanSource.c BalsaScanSource.h \
	BreezeScanSource.c BreezeScanSource.h \
	accesses.c accesses.h \
	arith.c arith.h \
	block.c block.h \
	channels.c channels.h \
	commands.c commands.h \
	components.c components.h \
	contexts.c contexts.h \
	decls.c decls.h \
	exprs.c exprs.h \
	flags.c flags.h \
	instances.c instances.h \
	lists.c lists.h \
	lvalues.c lvalues.h \
	misc.c misc.h \
	misclists.c misclists.h \
	operators.c operators.h \
	optimise.c optimise.h \
	output.c output.h \
	parts.c parts.h \
	ports.c ports.h \
	pretty.c pretty.h \
	procedures.c procedures.h \
	spans.c spans.h \
	implicants.c implicants.h \
	types.c types.h \
	values.c values.h \
	wires.c wires.h \
	balsa-c.c \
	banner.h \
	Idents.c Idents.h \
	rMemory.h \
	DynArray.h \
	StringMem.h \
	rSystem.h \
	General.c General.h \
	Sets.c Sets.h \
	callcontexts.c callcontexts.h

hand_other_srcs = \
	Balsa.ag Balsa.pars Balsa.scan \
	Breeze.pars Breeze.scan

auto_c_srcs = \
	BalsaScan.c \
	BreezeScan.c \
	Balsa.c \
	Breeze.c \
	Semantics.c \
	Tree.c

auto_h_srcs = \
	BalsaScan.h \
	BreezeScan.h \
	Balsa.h \
	Breeze.h \
	Semantics.h \
	Tree.h

auto_other_srcs = \
	Balsa.rex Balsa.lalr \
	BalsaScan.rpp \
	Breeze.rex Breeze.lalr \
	BreezeScan.rpp \
	yyTree.w

balsa_c_SOURCES = $(hand_c_srcs) $(auto_c_srcs) $(auto_h_srcs)
EXTRA_balsa_c_SOURCES = $(hand_other_srcs) $(auto_other_srcs)
BUILT_SOURCES = $(auto_h_srcs)
EXTRA_DIST = template.c template.h fixag.pl fixrex.pl
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/balsa-c/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/balsa-c/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
balsa-c$(EXEEXT): $(balsa_c_OBJECTS) $(balsa_c_DEPENDENCIES) 
	@rm -f balsa-c$(EXEEXT)
	$(LINK) $(balsa_c_OBJECTS) $(balsa_c_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/Balsa.Po
include ./$(DEPDIR)/BalsaScan.Po
include ./$(DEPDIR)/BalsaScanSource.Po
include ./$(DEPDIR)/Breeze.Po
include ./$(DEPDIR)/BreezeScan.Po
include ./$(DEPDIR)/BreezeScanSource.Po
include ./$(DEPDIR)/Errors.Po
include ./$(DEPDIR)/General.Po
include ./$(DEPDIR)/Idents.Po
include ./$(DEPDIR)/Positions.Po
include ./$(DEPDIR)/Semantics.Po
include ./$(DEPDIR)/Sets.Po
include ./$(DEPDIR)/Tree.Po
include ./$(DEPDIR)/accesses.Po
include ./$(DEPDIR)/arith.Po
include ./$(DEPDIR)/balsa-c.Po
include ./$(DEPDIR)/block.Po
include ./$(DEPDIR)/callcontexts.Po
include ./$(DEPDIR)/channels.Po
include ./$(DEPDIR)/commands.Po
include ./$(DEPDIR)/components.Po
include ./$(DEPDIR)/contexts.Po
include ./$(DEPDIR)/decls.Po
include ./$(DEPDIR)/exprs.Po
include ./$(DEPDIR)/flags.Po
include ./$(DEPDIR)/implicants.Po
include ./$(DEPDIR)/instances.Po
include ./$(DEPDIR)/lists.Po
include ./$(DEPDIR)/lvalues.Po
include ./$(DEPDIR)/misc.Po
include ./$(DEPDIR)/misclists.Po
include ./$(DEPDIR)/operators.Po
include ./$(DEPDIR)/optimise.Po
include ./$(DEPDIR)/output.Po
include ./$(DEPDIR)/parts.Po
include ./$(DEPDIR)/ports.Po
include ./$(DEPDIR)/pretty.Po
include ./$(DEPDIR)/procedures.Po
include ./$(DEPDIR)/spans.Po
include ./$(DEPDIR)/types.Po
include ./$(DEPDIR)/values.Po
include ./$(DEPDIR)/wires.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS


.PHONY: auto-clean

auto-clean: clean

BalsaScan.rpp: Balsa.lalr

Balsa.lalr: Balsa.pars Tree.h BalsaScanSource.h arith.h ports.h implicants.h
	if test -z $(CG); then \
		echo '*** Cocktail not installed, may be needed to build modified source properly'; \
		touch Balsa.lalr; \
	else \
		$(CG) -cxjz Balsa.pars; \
	fi

Balsa.rex: Balsa.scan BalsaScan.rpp
	if test -z $(RPP); then \
		echo '*** Cocktail not installed, may be needed to build modified source properly'; \
		touch Balsa.rex; \
	else \
		$(RPP) BalsaScan.rpp < Balsa.scan > Balsa.rex; \
	fi

BalsaScan.h: BalsaScan.c

BalsaScan.c: Balsa.rex 
	if test -z $(REX); then \
		echo '*** Cocktail not installed, may be needed to build modified source properly'; \
		touch BalsaScan.c; \
	else \
		$(REX) -cd Balsa.rex; \
		./fixrex.pl BalsaScan.c > BalsaScan_fixed.c; \
		mv -f BalsaScan_fixed.c BalsaScan.c; \
	fi

Balsa.h: Balsa.c

Balsa.c: Balsa.lalr
	if test -z $(LALR); then \
		echo '*** Cocktail not installed, may be needed to build modified source properly'; \
		touch Balsa.c; \
	else \
		$(LALR) -c -d Balsa.lalr 2>&1 | grep -v '^Information'; \
	fi

BreezeScan.rpp: Breeze.lalr

Breeze.lalr: Breeze.pars Tree.h BreezeScanSource.h arith.h ports.h implicants.h wires.h callcontexts.h
	if test -z $(CG); then \
		echo '*** Cocktail not installed, may be needed to build modified source properly'; \
		touch Breeze.lalr; \
	else \
		$(CG) -cxjz Breeze.pars; \
	fi

Breeze.rex: Breeze.scan BreezeScan.rpp
	if test -z $(RPP); then \
		echo '*** Cocktail not installed, may be needed to build modified source properly'; \
		touch Breeze.rex; \
	else \
		$(RPP) BreezeScan.rpp < Breeze.scan > Breeze.rex; \
	fi

BreezeScan.h: BreezeScan.c

BreezeScan.c: Breeze.rex 
	if test -z $(REX); then \
		echo '*** Cocktail not installed, may be needed to build modified source properly'; \
		touch BreezeScan.c; \
	else \
		$(REX) -cd Breeze.rex; \
		./fixrex.pl BreezeScan.c > BreezeScan_fixed.c; \
		mv -f BreezeScan_fixed.c BreezeScan.c; \
	fi

Breeze.h: Breeze.c

Breeze.c: Breeze.lalr
	if test -z $(LALR); then \
		echo '*** Cocktail not installed, may be needed to build modified source properly'; \
		touch Breeze.c; \
	else \
		$(LALR) -c -d Breeze.lalr; \
	fi

Tree.h: Tree.c
Semantics.h: Tree.c
Semactics.c: Tree.c
yyTree.w: Tree.c

Tree.c: Balsa.ag
	if test -z $(AST); then \
		echo '*** Cocktail not installed, may be needed to build modified source properly'; \
		touch Tree.c; \
	else \
		$(AST) -I -cdimyRD68 Balsa.ag; \
		./fixag.pl Semantics.c > Semantics_fixed.c; \
		mv -f Semantics_fixed.c Semantics.c; \
	fi

lines:
	$(top_srcdir)/bin/count-lines $(hand_c_srcs) $(hand_other_srcs)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
